plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.palantir.docker' version '0.35.0'
}
ext{
    axonVersion = "4.6.0"
}

group = 'com.mypay.money'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    testImplementation 'com.tngtech.archunit:archunit:1.0.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    implementation group: 'org.jetbrains', name: 'annotations', version: '23.0.0'
    implementation project(path: ':common')

    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'com.h2database:h2'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
}

test {
    useJUnitPlatform()
}

docker {
    println(tasks.bootJar.outputs.files)

    // 이미지 이름
    name rootProject.name+'-'+project.name + ":" + version

    // 어떤 Dockerfile
    dockerfile file('../Dockerfile')

    // 어떤 파일들을 Dockerfile에 복사할 것인가
    files tasks.bootJar.outputs.files

    // Dockerfile에 전달할 인자
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
}
